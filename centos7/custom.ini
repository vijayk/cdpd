[oozie]
build_tool = maven
COMMON_BUILD_OPTS = "${MVN_CMD} -fae -Dhadoop.version=${hadoop_jar_version} -Dhive.version=${hive_jar_version} -Dpig.version=${pig_jar_version} -Drepoid=${NEXUS_DEPLOY_REPO_ID} -Dreponame=${NEXUS_DEPLOY_REPO_ID} -Drepourl=${NEXUS_REPO_URL} -DdistMgmtReleaseUrl=${NEXUS_REPO_URL} -DmavenReleaseId=${NEXUS_DEPLOY_REPO_ID} -Pgpg,hadoop-2,!hadoop-1,uber,hwx-common"
setversion_cmd = ${MVN_CMD} ${MVN_SET_VERSION_CMD} -DnewVersion=${oozie_jar_version}
deploy_cmd = ${COMMON_BUILD_OPTS} deploy -DskipITs -DskipTests=true
coverage_tool = cobertura

    [[test_cmd]]
        cmd_1 =  ${COMMON_BUILD_OPTS} ${MAVEN_TEST_OPTS} -DjavaVersion=1.7 -Dmaven.test.failure.ignore=true -Dhadoop.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib test

    [[test_coverage_cmd]]
        cmd_1 = ${COMMON_BUILD_OPTS} ${MAVEN_TEST_OPTS} -Djava.net.preferIPv4Stack=true cobertura:cobertura

[isa_l]
PATH=/usr/bin:${GCC_HOME}/bin:${CMAKE_HOME}/bin:/opt/bin/:/bin/:${JAVA_HOME}/bin:${MVN_HOME}/bin:${FORREST_HOME}/bin:${R_HOME}/bin/:${ANT_HOME}/bin:${XERCES_HOME}/bin:${GRADLE_HOME}/bin:/usr/local/bin/:/usr/lib/mit/bin

    [[artifacts]]
        artifact_1 = isal-${isa_l_jar_version}.tar.gz

    [[install_cmd]]
        cmd_1 = sh autogen.sh
        cmd_2 = ./configure --prefix=${SOURCE_ROOT}/isa_l/isal-${isa_l_jar_version}
        cmd_3 = make
        cmd_4 = make install
        cmd_5 = tar -zcf isal-${isa_l_jar_version}.tar.gz isal-${isa_l_jar_version}

[impala]

  [[docker_metadata_cmd]]
        cmd_1 = cloudera/docker_images.yml, file

[knox]
build_tool = maven
COMMON_BUILD_OPTS = "${MVN_CMD} -Ppackage,release,idbroker,docker -DskipCheck=true -Dcheckstyle.skip=true -Drepo.id=${NEXUS_DEPLOY_REPO_ID} -Dinternal.maven.repo=${NEXUS_REPO_URL}"
setversion_cmd = ${MVN_CMD} ${MVN_SET_VERSION_CMD} -DnewVersion=${knox_jar_version}
deploy_cmd = ${COMMON_BUILD_OPTS}  deploy -DskipITs -DskipTests
package = 2
coverage_tool = cobertura

    [[artifacts]]
        artifact_1 = target/${knox_jar_version}/knox-${knox_jar_version}.tar.gz

    [[install_cmd]]
        cmd_1 = ${COMMON_BUILD_OPTS} install -DskipITs -DskipTests -Dmaven.javadoc.skip=true

    [[docker_metadata_cmd]]
        cmd_1 = cloudera/docker_images.yml, file

    [[text-replace]]
      # Set the docker registry. This must be REPLACE_1 to line up with canary.ini's REPLACE_1
      REPLACE_1 = "__REGISTRY__", ${DEV_DOCKER_REGISTRY}/cloudera, cloudera/docker_images.yml, regex_replace
      REPLACE_2 = 'REPLACE_TAG', ${knox_jar_version}, cloudera/docker_images.yml, regex_replace

[spark]
DOCKER_REGISTRY = "docker-private.infra.cloudera.com/cloudera"

    [[docker_metadata_cmd]]
        cmd_1 = cloudera/docker_images.yaml, file

    [[install_cmd]]
        cmd_2 = cloudera/docker/build_all.sh -r ${DOCKER_REGISTRY}

    [[text-replace]]
        replace_1 = "__REGISTRY__", ${DOCKER_REGISTRY}, cloudera/docker_images.yaml, regex_replace
